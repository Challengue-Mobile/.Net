// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MottothTracking.Data;

#nullable disable

namespace MottothTracking.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251001025015_InitialSqlServer")]
    partial class InitialSqlServer
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MottothTracking.Models.Beacon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_BEACON");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Bateria")
                        .HasColumnType("int")
                        .HasColumnName("BATERIA");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODELO");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("STATUS");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("UUID");

                    b.HasKey("Id");

                    b.HasIndex("Uuid");

                    b.ToTable("TB_BEACON");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bateria = 90,
                            Modelo = "FIAP-DEV",
                            Status = "ATIVO",
                            Uuid = "33333333-3333-3333-3333-333333333333"
                        },
                        new
                        {
                            Id = 2,
                            Bateria = 75,
                            Modelo = "FIAP-TEST",
                            Status = "MANUTENCAO",
                            Uuid = "44444444-4444-4444-4444-444444444444"
                        });
                });

            modelBuilder.Entity("MottothTracking.Models.Localizacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_LOCALIZACAO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_HORA");

                    b.Property<double>("Latitude")
                        .HasColumnType("float")
                        .HasColumnName("LATITUDE");

                    b.Property<double>("Longitude")
                        .HasColumnType("float")
                        .HasColumnName("LONGITUDE");

                    b.Property<int>("MotoId")
                        .HasColumnType("int")
                        .HasColumnName("ID_MOTO");

                    b.Property<int>("ZonaId")
                        .HasColumnType("int")
                        .HasColumnName("ID_ZONA");

                    b.HasKey("Id");

                    b.HasIndex("MotoId");

                    b.HasIndex("ZonaId");

                    b.ToTable("TB_LOCALIZACAO");
                });

            modelBuilder.Entity("MottothTracking.Models.LogSistema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_LOG");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_HORA");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("MENSAGEM");

                    b.Property<string>("Nivel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("NIVEL");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TB_LOG_SISTEMA");
                });

            modelBuilder.Entity("MottothTracking.Models.Moto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_MOTO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BeaconId")
                        .HasColumnType("int")
                        .HasColumnName("ID_BEACON");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_REGISTRO");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODELO");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PLACA");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("STATUS");

                    b.HasKey("Id");

                    b.HasIndex("BeaconId");

                    b.ToTable("TB_MOTO");
                });

            modelBuilder.Entity("MottothTracking.Models.Movimentacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_MOV");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataMovimentacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_MOVIMENTACAO");

                    b.Property<string>("Destino")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESTINO");

                    b.Property<int>("MotoId")
                        .HasColumnType("int")
                        .HasColumnName("ID_MOTO");

                    b.Property<string>("Origem")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ORIGEM");

                    b.Property<string>("Tipo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("TIPO");

                    b.Property<int?>("ZonaDestinoId")
                        .HasColumnType("int")
                        .HasColumnName("ID_ZONA_DESTINO");

                    b.Property<int?>("ZonaOrigemId")
                        .HasColumnType("int")
                        .HasColumnName("ID_ZONA_ORIGEM");

                    b.HasKey("Id");

                    b.HasIndex("MotoId");

                    b.HasIndex("ZonaDestinoId");

                    b.HasIndex("ZonaOrigemId");

                    b.ToTable("TB_MOVIMENTACAO");
                });

            modelBuilder.Entity("MottothTracking.Models.Patio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_PATIO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Endereco")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ENDERECO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.ToTable("TB_PATIO");
                });

            modelBuilder.Entity("MottothTracking.Models.RegistroBateria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_REG");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BeaconId")
                        .HasColumnType("int")
                        .HasColumnName("ID_BEACON");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_HORA");

                    b.Property<int>("NivelBateria")
                        .HasColumnType("int")
                        .HasColumnName("NIVEL");

                    b.HasKey("Id");

                    b.HasIndex("BeaconId");

                    b.ToTable("TB_REGISTRO_BATERIA");
                });

            modelBuilder.Entity("MottothTracking.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_CADASTRO");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SENHA_HASH");

                    b.HasKey("Id");

                    b.ToTable("TB_USUARIO");
                });

            modelBuilder.Entity("MottothTracking.Models.Zona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_ZONA");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NOME");

                    b.Property<int>("PatioId")
                        .HasColumnType("int")
                        .HasColumnName("ID_PATIO");

                    b.HasKey("Id");

                    b.HasIndex("PatioId");

                    b.ToTable("TB_ZONA");
                });

            modelBuilder.Entity("MottothTracking.Models.Localizacao", b =>
                {
                    b.HasOne("MottothTracking.Models.Moto", "Moto")
                        .WithMany("Localizacoes")
                        .HasForeignKey("MotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MottothTracking.Models.Zona", "Zona")
                        .WithMany()
                        .HasForeignKey("ZonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Moto");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("MottothTracking.Models.LogSistema", b =>
                {
                    b.HasOne("MottothTracking.Models.Usuario", "Usuario")
                        .WithMany("Logs")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MottothTracking.Models.Moto", b =>
                {
                    b.HasOne("MottothTracking.Models.Beacon", "Beacon")
                        .WithMany("Motos")
                        .HasForeignKey("BeaconId");

                    b.Navigation("Beacon");
                });

            modelBuilder.Entity("MottothTracking.Models.Movimentacao", b =>
                {
                    b.HasOne("MottothTracking.Models.Moto", "Moto")
                        .WithMany("Movimentacoes")
                        .HasForeignKey("MotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MottothTracking.Models.Zona", "ZonaDestino")
                        .WithMany()
                        .HasForeignKey("ZonaDestinoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MottothTracking.Models.Zona", "ZonaOrigem")
                        .WithMany()
                        .HasForeignKey("ZonaOrigemId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Moto");

                    b.Navigation("ZonaDestino");

                    b.Navigation("ZonaOrigem");
                });

            modelBuilder.Entity("MottothTracking.Models.RegistroBateria", b =>
                {
                    b.HasOne("MottothTracking.Models.Beacon", "Beacon")
                        .WithMany("RegistrosBateria")
                        .HasForeignKey("BeaconId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beacon");
                });

            modelBuilder.Entity("MottothTracking.Models.Zona", b =>
                {
                    b.HasOne("MottothTracking.Models.Patio", "Patio")
                        .WithMany("Zonas")
                        .HasForeignKey("PatioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("MottothTracking.Models.Beacon", b =>
                {
                    b.Navigation("Motos");

                    b.Navigation("RegistrosBateria");
                });

            modelBuilder.Entity("MottothTracking.Models.Moto", b =>
                {
                    b.Navigation("Localizacoes");

                    b.Navigation("Movimentacoes");
                });

            modelBuilder.Entity("MottothTracking.Models.Patio", b =>
                {
                    b.Navigation("Zonas");
                });

            modelBuilder.Entity("MottothTracking.Models.Usuario", b =>
                {
                    b.Navigation("Logs");
                });
#pragma warning restore 612, 618
        }
    }
}
